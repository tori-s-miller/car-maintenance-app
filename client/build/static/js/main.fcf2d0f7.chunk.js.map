{"version":3,"sources":["components/img/car-illustration.svg","components/maintenance/img/fluid.svg","components/maintenance/img/tire.svg","components/maintenance/img/windshield.svg","components/maintenance/img/filter.svg","components/layout/img/maintenance-options.svg","components/layout/img/maintenance-options-active.svg","components/layout/img/pending.svg","components/layout/img/pending-active.svg","components/layout/img/completed.svg","components/layout/img/completed-active.svg","components/layout/img/logout.svg","components/maintenance/img/car-light.svg","components/maintenance/img/coolant.svg","components/maintenance/img/engineoil.svg","components/maintenance/img/battery.svg","components/maintenance/img/belt.svg","components/maintenance/img/lubrication.svg","components/maintenance/img/exhaust.svg","components/maintenance/img/brakes.svg","components/maintenance/img/fuel-filter.svg","components/maintenance/img/steering.svg","components/maintenance/img/polish.svg","components/maintenance/img/alignment.svg","components/maintenance/img/brake-fluid.svg","components/maintenance/img/checkbox.svg","components/layout/Landing.js","actions/alert.js","actions/types.js","utils/setAuthToken.js","actions/auth.js","components/auth/Register.js","components/auth/Login.js","components/auth/LoginDemo.js","components/layout/Alert.js","components/layout/Navbar.js","actions/account.js","components/forms/AddPendingMaintenance.js","components/maintenance/MaintenanceOptions.js","components/forms/AddCompletedMaintenance.js","components/maintenance/PendingMaintenance.js","components/maintenance/CompletedMaintenance.js","components/routing/PrivateRoute.js","reducers/alert.js","reducers/auth.js","reducers/account.js","reducers/index.js","store.js","App.js","index.js"],"names":["module","exports","connect","state","isAuthenticated","auth","to","className","src","car","alt","setAlert","msg","alertType","dispatch","id","uuidv4","type","payload","setTimeout","setAuthToken","token","axios","defaults","headers","common","loadUser","a","localStorage","get","res","data","login","email","password","config","body","JSON","stringify","post","setItem","errors","response","forEach","error","register","name","pendingMaintenance","completedMaintenance","useState","password2","formData","setFormData","onChange","e","target","value","onSubmit","preventDefault","htmlFor","autoComplete","placeholder","required","minLength","alerts","alert","length","map","key","logout","useTextNav","useMediaQuery","query","useIconNav","location","useLocation","pathname","activestyle","color","maintenanceIconActive","maintenanceIcon","pendingActive","pending","completedActive","completed","onClick","href","logoutIcon","addCompletedMaintenance","history","statusText","status","user","addPendingMaintenance","renderForm","handleChild","item","maintenanceType","date","notes","itemID","Math","random","rows","_id","props","hidden","setHidden","setKey","itemType","setItemType","mediumView","currentOption","setCurrentOption","currentTarget","getAttribute","monthlyTasks","index","data-index","current-type","undefined","light","tire","windshield","fluid","coolant","engineoil","threeMonthTasks","battery","belt","sixMonthTasks","lubrication","filter","exhaust","brakes","yearlyTasks","fuelfilter","steering","brakefluid","alignment","polish","completedMaintenanceItems","deletePendingMaintenanceForCompleted","delete","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","account","pendingMaintenanceItems","getPendingMaintenance","deletePendingMaintenance","window","confirm","useEffect","parentNode","deletePendingMaintenanceClick","deleteKey","Number","slice","getCompletedMaintenance","deleteCompletedMaintenance","deleteCompletedMaintenanceClick","checkbox","Component","component","loading","rest","render","initialState","getItem","combineReducers","action","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","exact","path","Landing","Register","Login","LoginDemo","MaintenanceOptions","PendingMaintenance","CompletedMaintenance","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fcf2d0f7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/car-illustration.74abe245.svg\";","module.exports = __webpack_public_path__ + \"static/media/fluid.8254293c.svg\";","module.exports = __webpack_public_path__ + \"static/media/tire.b0552ea6.svg\";","module.exports = __webpack_public_path__ + \"static/media/windshield.78443cd7.svg\";","module.exports = __webpack_public_path__ + \"static/media/filter.88950a82.svg\";","module.exports = __webpack_public_path__ + \"static/media/maintenance-options.cddcbcbc.svg\";","module.exports = __webpack_public_path__ + \"static/media/maintenance-options-active.5b9f5ece.svg\";","module.exports = __webpack_public_path__ + \"static/media/pending.679b1eee.svg\";","module.exports = __webpack_public_path__ + \"static/media/pending-active.7c61caec.svg\";","module.exports = __webpack_public_path__ + \"static/media/completed.84b4e8eb.svg\";","module.exports = __webpack_public_path__ + \"static/media/completed-active.96fd1143.svg\";","module.exports = __webpack_public_path__ + \"static/media/logout.3b007f8a.svg\";","module.exports = __webpack_public_path__ + \"static/media/car-light.f4ef36a3.svg\";","module.exports = __webpack_public_path__ + \"static/media/coolant.24649bfc.svg\";","module.exports = __webpack_public_path__ + \"static/media/engineoil.7fb82df1.svg\";","module.exports = __webpack_public_path__ + \"static/media/battery.7e20909a.svg\";","module.exports = __webpack_public_path__ + \"static/media/belt.808c1856.svg\";","module.exports = __webpack_public_path__ + \"static/media/lubrication.2ce2c8f1.svg\";","module.exports = __webpack_public_path__ + \"static/media/exhaust.9d44b053.svg\";","module.exports = __webpack_public_path__ + \"static/media/brakes.96856bdb.svg\";","module.exports = __webpack_public_path__ + \"static/media/fuel-filter.a0b5e4c9.svg\";","module.exports = __webpack_public_path__ + \"static/media/steering.2d5a3537.svg\";","module.exports = __webpack_public_path__ + \"static/media/polish.83b366f8.svg\";","module.exports = __webpack_public_path__ + \"static/media/alignment.f05d296b.svg\";","module.exports = __webpack_public_path__ + \"static/media/brake-fluid.88ab7d99.svg\";","module.exports = __webpack_public_path__ + \"static/media/checkbox.775a033b.svg\";","import React from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport car from '../img/car-illustration.svg';\n\nconst Landing = ({ isAuthenticated }) => {\n  if(isAuthenticated) {\n    return <Redirect to='/maintenanceoptions' />\n  }\n\n    return (\n    <section className=\"landing\">\n      <div className=\"col-1\">\n        <h1>AutoLog</h1>\n        <h2>Schedule car maintenance tasks and track prior car maintenance.</h2>\n          <Link to=\"/register\" className=\"landing-btn btn-signup\"><span>Sign Up</span></Link>\n          <Link to=\"/login-demo\" className=\"landing-btn btn-demo\">Try Demo</Link>\n          <p className=\"have-acct-text\">Already have an account? <Link to=\"/login\" className=\"have-acct-text-link\">Login.</Link></p>\n      </div>\n      <div className=\"col-2\">\n        <img src={car} className=\"car\" alt=\"car\" />\n      </div>\n    </section>\n    )\n}\n\nLanding.propTypes = {\n  isAuthenticated: PropTypes.bool\n}\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps)(Landing);","import { v4 as uuidv4 } from 'uuid';\nimport { SET_ALERT, REMOVE_ALERT } from './types';\n\nexport const setAlert = (msg, alertType, timeout = 5000) => dispatch => {\n    const id = uuidv4();\n    dispatch({\n        type: SET_ALERT,\n        payload: { msg, alertType, id }\n    });\n\n    setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id }), 5000);\n};","export const SET_ALERT = 'SET_ALERT';\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\nexport const USER_LOADED = 'USER_LOADED';\nexport const AUTH_ERROR = 'AUTH_ERROR';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\nexport const LOGOUT = 'LOGOUT';\nexport const UPDATE_MAINTENANCE = 'UPDATE_MAINTENANCE';\nexport const ADD_MAINTENANCE = 'ADD_MAINTENANCE';\nexport const GET_MAINTENANCE = 'GET_MAINTENANCE';\nexport const DELETE_MAINTENANCE = 'DELETE_MAINTENANCE';\nexport const ADD_COMPLETED_MAINTENANCE = 'ADD_COMPLETED_MAINTENANCE';\nexport const GET_COMPLETED_MAINTENANCE = 'GET_COMPLETED_MAINTENANCE';\nexport const PROFILE_ERROR = 'PROFILE_ERROR';\nexport const MAINTENANCE_ERROR = 'MAINTENANCE_ERROR';\n\nexport const GET_ACCOUNT = 'GET_ACCOUNT';\nexport const UPDATE_ACCOUNT = 'UPDATE_ACCOUNT';\nexport const ACCOUNT_ERROR = 'ACCOUNT_ERROR';\n","import axios from 'axios';\n\nconst setAuthToken = token => {\n    if(token) {\n        // the token we pass in is going to come from local storage\n        // if there is a token, we're going to set the global header using axios\n        axios.defaults.headers.common['x-auth-token'] = token;\n    } else {\n        delete axios.defaults.headers.common['x-auth-token'];\n    }\n}\n\nexport default setAuthToken;","import axios from 'axios';\nimport { setAlert } from './alert';\nimport {\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    USER_LOADED,\n    AUTH_ERROR,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT\n} from './types';\nimport setAuthToken from '../utils/setAuthToken';\n\n// Load User\nexport const loadUser = () => async dispatch => {\n    // check local storage\n    if(localStorage.token) {\n        setAuthToken(localStorage.token);\n    }\n    try {\n        const res = await axios.get('/api/auth');\n\n        dispatch({\n            type: USER_LOADED,\n            payload: res.data\n        });\n    } catch (err) {\n        dispatch({\n            type: AUTH_ERROR\n        })\n    }\n}\n\n// Register User\nexport const register = ({ name, email, password, pendingMaintenance, completedMaintenance }) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    }\n\n    const body = JSON.stringify({ name, email, password, pendingMaintenance, completedMaintenance });\n\n    try {\n        const res = await axios.post('/api/users', body, config);\n\n        dispatch({\n            type: REGISTER_SUCCESS,\n            payload: res.data\n        });\n\n        dispatch(loadUser());\n    } catch (err) {\n        const errors = err.response.data.errors;\n\n        if(errors) {\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n        }\n\n        dispatch({\n            type: REGISTER_FAIL\n        });\n    }\n}\n\n// Login User\nexport const login = (email, password) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    }\n\n    const body = JSON.stringify({ email, password });\n\n    try {\n        const res = await axios.post('/api/auth', body, config);\n\n        dispatch({\n            type: LOGIN_SUCCESS,\n            payload: res.data\n        });\n        localStorage.setItem('token', res.data.token);\n        dispatch(loadUser());\n    } catch (err) {\n        const errors = err.response.data.errors;\n\n        if(errors) {\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n        }\n\n        dispatch({\n            type: LOGIN_FAIL\n        });\n    }\n};\n\n// Logout\nexport const logout = () => dispatch => {\n    dispatch({ type: LOGOUT });\n}","import React, { Fragment, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport { setAlert } from '../../actions/alert';\nimport { register } from '../../actions/auth';\nimport PropTypes from 'prop-types';\nimport car from '../img/car-illustration.svg';\n\nconst Register = ({ setAlert, register, isAuthenticated }) => {\n    const [formData, setFormData] = useState({\n        email: '',\n        password: '',\n        password2: '',\n        pendingMaintenance: [],\n        completedMaintenance: []\n    });\n\n    const { email, password, password2, pendingMaintenance, completedMaintenance } = formData;\n\n    const onChange = e => {\n        setFormData({ ...formData, [e.target.name]: e.target.value });\n    }\n\n    const onSubmit = e => {\n        e.preventDefault();\n        if(password !== password2) {\n            setAlert('Passwords do not match', 'danger');\n        } else {\n            register({ email, password, pendingMaintenance, completedMaintenance });\n        }\n    }\n\n    if(isAuthenticated) {\n        return <Redirect to=\"/maintenanceoptions\" />\n    }\n\n    return (\n        <Fragment>\n        <section className=\"landing\">\n            <div className=\"col-1\">\n                <h1>AutoLog</h1>\n                <h2>Create an Account</h2>\n                <form className=\"form\" onSubmit={e => onSubmit(e)}>\n                <div className=\"form-group\">\n                    <label htmlFor=\"email\" className=\"email-label\">Email</label>\n                    <input \n                    type=\"email\" \n                    name=\"email\"\n                    autoComplete=\"username\"\n                    className=\"form-input\" \n                    value={email} \n                    onChange={e => onChange(e)} \n                    />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"password\" className=\"password-label\">Password</label>\n                    <input\n                    type=\"password\"\n                    name=\"password\"\n                    autoComplete=\"new-password\"\n                    className=\"form-input\" \n                    value={password} \n                    onChange={e => onChange(e)}\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"password\" className=\"password-label\">Confirm Password</label>\n                    <input\n                    type=\"password\"\n                    name=\"password2\"\n                    className=\"form-input\"  \n                    value={password2} \n                    onChange={e => onChange(e)}\n                    />\n                </div>\n                <input type=\"submit\" className=\"form-btn\" value=\"Sign Up\" />\n                <Link to=\"/login-demo\" className=\"landing-btn btn-demo\">Try Demo</Link>\n                </form>\n                <p className=\"have-acct-text\">Already have an account? <Link to='/login' className=\"have-acct-text-link\">Login</Link></p>\n            </div>\n            <div className=\"col-2\">\n                <img src={car} className=\"car\" alt=\"car\" />\n            </div>\n        </section>\n        </Fragment>\n    );\n};\n\nRegister.propTypes = {\n    setAlert: PropTypes.func.isRequired,\n    register: PropTypes.func.isRequired,\n    isAuthenticated: PropTypes.bool\n}\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, { setAlert, register })(Register);","import React, { Fragment, useState } from 'react'\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { login } from '../../actions/auth';\nimport car from '../img/car-illustration.svg';\n\nconst Login = ({ login, isAuthenticated }) => {\n    const [formData, setFormData] = useState({\n        email: '',\n        password: '',\n    });\n\n    const { email, password } = formData;\n\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n    const onSubmit = e => {\n        e.preventDefault();\n        login(email, password);\n    };\n\n    if(isAuthenticated) {\n        return <Redirect to=\"/maintenanceoptions\" />\n    }\n\n    return (\n        <Fragment>\n        <section className=\"landing\">\n            <div className=\"col-1\">\n                <h1>AutoLog</h1>\n                <h2>Log Into Your Account</h2>\n                <form className=\"form\" onSubmit={e => onSubmit(e)}>\n                <div className=\"form-group\">\n                    <label htmlFor=\"email\" className=\"email-label\">Email</label>\n                    <input \n                    type=\"email\" \n                    placeholder=\"Email Address\" \n                    name=\"email\"\n                    autoComplete=\"username\"\n                    className=\"form-input\" \n                    value={email} \n                    onChange={e => onChange(e)} required \n                    />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"password\" className=\"password-label\">Password</label>\n                    <input\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    autoComplete=\"current-password\"\n                    className=\"form-input\" \n                    minLength=\"6\"\n                    value={password} \n                    onChange={e => onChange(e)}\n                    />\n                </div>\n                <input type=\"submit\" className=\"form-btn\" value=\"Log In\" />\n                <Link to=\"/login-demo\" className=\"landing-btn btn-demo\">Try Demo</Link>\n                </form>\n                <p className=\"have-acct-text\">Don't have an account? <Link to='/register' className=\"have-acct-text-link\">Sign up.</Link></p>\n            </div>\n            <div className=\"col-2\">\n                <img src={car} className=\"car\" alt=\"car\" />\n            </div>\n        </section>\n        </Fragment>\n    );\n};\n\nLogin.propTypes = {\n    login: PropTypes.func.isRequired,\n    isAuthenticated: PropTypes.bool\n}\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, { login })(Login);","import React, { Fragment, useState } from 'react'\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { login } from '../../actions/auth';\nimport car from '../img/car-illustration.svg';\n\nconst LoginDemo = ({ login, isAuthenticated }) => {\n    const [formData, setFormData] = useState({\n        email: 'demoaccount@gmail.com',\n        password: '123456',\n    });\n\n    const { email, password } = formData;\n\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n    const onSubmit = e => {\n        e.preventDefault();\n        login(email, password);\n    };\n\n    if(isAuthenticated) {\n        return <Redirect to=\"/maintenanceoptions\" />\n    }\n\n    return (\n        <Fragment>\n        <section className=\"landing\">\n            <div className=\"col-1\">\n                <h1>AutoLog</h1>\n                <h2>Log Into Demo Account</h2>\n                <form className=\"form\" onSubmit={e => onSubmit(e)}>\n                <div className=\"form-group\">\n                    <label htmlFor=\"email\" className=\"email-label\">Email</label>\n                    <input type=\"email\" placeholder=\"Email Address\" name=\"email\" value={email} \n                        onChange={e => onChange(e)} required />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"password\" className=\"password-label\">Password</label>\n                    <input\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    minLength=\"6\"\n                    value={password} \n                    onChange={e => onChange(e)}\n                    />\n                </div>\n                <input type=\"submit\" className=\"form-btn\" value=\"Log In\" />\n                </form>\n                <p className=\"have-acct-text\">Want to create your own account? <Link to='/register' className=\"have-acct-text-link\">Sign up.</Link></p>\n            </div>\n            <div className=\"col-2\">\n                <img src={car} className=\"car\" alt=\"car\" />\n            </div>\n        </section>\n        </Fragment>\n    );\n};\n\nLoginDemo.propTypes = {\n    login: PropTypes.func.isRequired,\n    isAuthenticated: PropTypes.bool\n}\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, { login })(LoginDemo);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nexport const Alert = ({ alerts }) => \n    alerts !== null && \n    alerts.length > 0 && \n    alerts.map(alert => (\n        <div key={alert.id} className={`alert alert-${alert.alertType}`}>\n            {alert.msg}\n        </div>\n    ));\n\nAlert.propTypes = {\n    alerts: PropTypes.array.isRequired\n}\n\nconst mapStateToProps = state => ({\n    alerts: state.alert\n})\n\nexport default connect(mapStateToProps)(Alert);","import React from 'react'\nimport { NavLink, useLocation } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { useMediaQuery } from 'react-responsive';\nimport PropTypes from 'prop-types';\nimport { logout } from '../../actions/auth';\nimport '../../App.css';\nimport maintenanceIcon from './img/maintenance-options.svg'\nimport maintenanceIconActive from './img/maintenance-options-active.svg'\nimport pending from './img/pending.svg';\nimport pendingActive from './img/pending-active.svg';\nimport completed from './img/completed.svg';\nimport completedActive from './img/completed-active.svg';\nimport logoutIcon from './img/logout.svg';\n\n\n\n\nconst Navbar = ({ logout }) => {\n\n  const useTextNav = useMediaQuery({ query: '(min-width: 769px)' });\n  const useIconNav = useMediaQuery({ query: '(max-width: 768px)' });\n\n  // const location = useLocation();\n  const location = useLocation().pathname;\n\n    return (\n    <nav className=\"navbar\">\n      <ul>\n        <li className=\"nav-link-1\">\n          <NavLink \n            to=\"/maintenanceoptions\"\n            activestyle={{\n              color: \"#008CC5\"\n            }}\n          >\n          {useTextNav && <div className=\"nav-link\">Maintenance Options</div>}\n          {useIconNav && location === '/maintenanceoptions' && <img \n            src={maintenanceIconActive} \n            className=\"\"\n            alt=\"active-icon\" />}\n          {useIconNav && location !== '/maintenanceoptions' && <img \n          src={maintenanceIcon} \n          className=\"\"\n          alt=\"inactive-icon\" />}\n          </NavLink>\n        </li>\n        <li className=\"nav-link-2\">\n          <NavLink \n            to=\"/account/pendingmaintenance\"\n            activestyle={{\n              color: \"#008CC5\"\n            }}\n            >\n            {useTextNav && <div className=\"nav-link\">Pending Maintenance</div>}\n            {useIconNav && location === '/account/pendingmaintenance' && <img \n            src={pendingActive} \n            alt=\"active-icon\" />}\n            {useIconNav && location !== '/account/pendingmaintenance' && <img \n            src={pending} \n            alt=\"inactive-icon\" />}\n          </NavLink>\n        </li>\n        <li className=\"nav-link-3\">\n          <NavLink \n            to=\"/account/completedmaintenance\"\n            activestyle={{\n              color: \"#008CC5\"\n            }}\n            >\n            {useTextNav && <div className=\"nav-link\">Completed Maintenance</div>}\n            {useIconNav && location === '/account/completedmaintenance' && <img \n            src={completedActive} \n            alt=\"active-icon\" />}\n            {useIconNav && location !== '/account/completedmaintenance' && <img \n            src={completed} \n            alt=\"inactive-icon\" />}\n          </NavLink>\n        </li>\n        <li>\n          {useTextNav && <a onClick={logout} href=\"#!\" className=\"logout\">\n            <span className=\"hide-sm\">Logout</span>\n          </a>}\n          {useIconNav && <img \n            src={logoutIcon} \n            className=\"logout\"\n            alt=\"logout-icon\" />}\n        </li>\n      </ul>\n    </nav>\n    )\n}\n\nNavbar.propTypes = {\n  logout: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n})\n\nexport default connect(mapStateToProps, { logout })(Navbar);","import axios from 'axios';\nimport { setAlert } from './alert';\n\nimport {\n    GET_ACCOUNT,\n    UPDATE_ACCOUNT,\n    ACCOUNT_ERROR\n} from './types';\n\n\n// Get Pending Maintenance\nexport const getPendingMaintenance = () => async dispatch => {\n    try {\n        const res = await axios.get('/api/account/pendingmaintenance')\n\n        dispatch({\n            type: GET_ACCOUNT,\n            payload: res.data\n        });\n    } catch (err) {\n        dispatch({\n            type: ACCOUNT_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        })\n    }\n}\n\n\nexport const addPendingMaintenance = (formData, id) => async dispatch => {\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const res = await axios.post('/api/account/pendingmaintenance', formData, config);\n\n        dispatch({\n            type: UPDATE_ACCOUNT,\n            payload: res.data\n        });\n\n        dispatch(setAlert('Pending Maintenance Added', 'success'));\n    } catch (err) {\n        const errors = err.response.data.errors;\n\n        if(errors) {\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n        }\n\n        dispatch({\n            type: ACCOUNT_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        }); \n    }\n}\n\n// Delete Pending Maintenance\nexport const deletePendingMaintenance = id => async dispatch => {\n    if(window.confirm('Are you sure you want to delete this maintenance item?')) {\n        try {\n            const res = await axios.delete(`/api/account/pendingmaintenance/${id}`);\n    \n            dispatch({\n                type: UPDATE_ACCOUNT,\n                payload: res.data\n            })\n    \n        } catch (err) {\n            dispatch({\n                type: ACCOUNT_ERROR,\n                payload: { msg: err.response.statusText, status: err.response.status }\n            }); \n        }\n    }\n};\n\n// Delete Pending Maintenance when adding to Completed Maintenance\nexport const deletePendingMaintenanceForCompleted = id => async dispatch => {\n    try {\n        const res = await axios.delete(`/api/account/pendingmaintenance/${id}`);\n\n        dispatch({\n            type: UPDATE_ACCOUNT,\n            payload: res.data\n        })\n\n    } catch (err) {\n        dispatch({\n            type: ACCOUNT_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        }); \n    }\n};\n\n\n// Get Completed Maintenance\nexport const getCompletedMaintenance = () => async dispatch => {\n    try {\n        const res = await axios.get('/api/account/completedmaintenance')\n\n        dispatch({\n            type: GET_ACCOUNT,\n            payload: res.data\n        });\n    } catch (err) {\n        dispatch({\n            type: ACCOUNT_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        })\n    }\n}\n\n\n// Add Completed Maintenance  THIS SHOULDN'T TAKE IN FORM DATA\nexport const addCompletedMaintenance = (formData, history) => async dispatch => {\n    try {      \n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const res = await axios.post('/api/account/completedmaintenance', formData, config);\n\n        dispatch({\n            type: UPDATE_ACCOUNT,\n            payload: res.data\n        });\n\n        dispatch(setAlert('Completed Maintenance Added', 'success'));\n\n    } catch (err) {\n        const errors = err.response.data.errors;\n\n        if(errors) {\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n        }\n\n        dispatch({\n            type: ACCOUNT_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        }); \n    }\n}\n\n// Delete Completed Maintenance\nexport const deleteCompletedMaintenance = id => async dispatch => {\n    if(window.confirm('Are you sure you want to delete this maintenance item?')) {\n        try {\n            const res = await axios.delete(`/api/account/completedmaintenance/${id}`);\n    \n            dispatch({\n                type: UPDATE_ACCOUNT,\n                payload: res.data\n            })\n    \n        } catch (err) {\n            dispatch({\n                type: ACCOUNT_ERROR,\n                payload: { msg: err.response.statusText, status: err.response.status }\n            }); \n        }\n    }\n};","import React, { Fragment, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { addPendingMaintenance } from '../../actions/account';\n\nconst AddPendingMaintenance = ({ addPendingMaintenance, history, handleChild, renderForm, item }) => {\n\n    const [formData, setFormData] = useState({\n        maintenanceType: item,\n        date: '',\n        notes: '',\n        itemID: Math.random()\n    });\n\n    const { date, notes } = formData;\n\n    const onChange = e => {\n        setFormData({ ...formData, [e.target.name]: e.target.value });\n    }\n\n    return (\n        <Fragment>\n            <form className=\"maintenance-item-form\" onSubmit={e => {\n                e.preventDefault();\n                addPendingMaintenance(formData, history);\n                renderForm(e);\n                }}>\n                <label htmlFor=\"date\" className=\"date-label\">Date to be completed</label>\n                <input type=\"date\" name=\"date\" className=\"date-input\" value={date} onChange={e => onChange(e)} />\n                <label htmlFor=\"notes\" className=\"notes-label\">Notes</label>\n                <textarea rows=\"3\" name=\"notes\" className=\"input-notes\" value={notes} onChange={e => onChange(e)} />\n                <input type=\"submit\" value=\"Schedule Task\" className=\"submit-button\" />\n                <input type=\"button\" value=\"Cancel\" className=\"cancel-button\" onClick={e => renderForm(e)} />\n            </form>\n        </Fragment>\n    )\n}\n\nconst mapStateToProps = state => {\n        return ({\n        pendingMaintenance: state.auth.user.pendingMaintenance\n    })\n}\n\nexport default connect(mapStateToProps, { addPendingMaintenance })(AddPendingMaintenance);","import React, { useState, Fragment } from 'react';\nimport { useMediaQuery } from 'react-responsive';\nimport Navbar from '../layout/Navbar';\nimport light from './img/car-light.svg';\nimport tire from './img/tire.svg';\nimport coolant from './img/coolant.svg';\nimport windshield from './img/windshield.svg';\nimport engineoil from './img/engineoil.svg';\nimport fluid from './img/fluid.svg';\nimport battery from './img/battery.svg';\nimport belt from './img/belt.svg';\nimport lubrication from './img/lubrication.svg';\nimport filter from './img/filter.svg';\nimport exhaust from './img/exhaust.svg';\nimport brakes from './img/brakes.svg';\nimport fuelfilter from './img/fuel-filter.svg';\nimport steering from './img/steering.svg';\nimport polish from './img/polish.svg';\nimport alignment from './img/alignment.svg';\nimport brakefluid from './img/brake-fluid.svg';\nimport AddPendingMaintenance from '../forms/AddPendingMaintenance';\nimport { connect } from 'react-redux';\n\n\nfunction MaintenanceOptions(props) {\n\n    const id = props.id;\n\n    const monthlyItems = [\n        'Check Lights', \n        'Tire inflation and tread',\n        'Engine oil',\n        'Check windshield wiper fluid',\n        'Check brake fluid',\n        'Check coolant'\n    ]\n\n    const threeMonths = [\n        'Automatic transmission fluid',\n        'Battery and cables',\n        'Check belts and hoses',\n        'Check power steering fluid'\n    ]\n\n    const sixMonths = [\n        'Chassis lubrication',\n        'Tire rotation',\n        'Engine air filter',\n        'Check exhaust system',\n        'Replace wiper blades',\n        'Brakes inspection'\n    ]\n\n    const yearlyItems = [\n        'Replace cabin air filter',\n        'Check fuel filter',\n        'Check steering and suspension',\n        'Flush brake fluid',\n        'Check alignment',\n        'Polish windshield and headlights'\n    ]\n\n    const [hidden, setHidden] = useState(true);\n    const [key, setKey] = useState(null);\n    const [itemType, setItemType] = useState(null);\n\n    const mediumView = useMediaQuery({ query: '(max-width: 768px)' });\n\n    const [currentOption, setCurrentOption] = useState('monthly')\n\n\n    function renderForm(e) {\n        e.preventDefault();\n        const key = e.currentTarget.getAttribute(\"data-index\");\n        const itemType = e.currentTarget.getAttribute(\"current-type\")\n        setItemType(itemType)\n        setKey(key);\n        setHidden(!hidden);\n    }\n\n    // const [child, setChild] = React.useState(false);\n    // const handleChildState = React.useCallback(childState => {\n    //   setChild(childState);\n    // }, []);\n\n\n    const monthlyTasks = monthlyItems.map((item, index) => {\n        return (\n            <div \n                className={!hidden && itemType === \"monthly\" && key === `${index}` ? \"maintenance-item-expanded\" : \"maintenance-item\"} \n                key={index} \n                data-index={index}\n                current-type=\"monthly\" \n                onClick={hidden ? renderForm : undefined}\n            >\n                <div className=\"flex-container\">\n                    {item === 'Check Lights' && <img src={light} className=\"icon\" alt=\"headlight-icon\" />}\n                    {item === 'Tire inflation and tread' && <img src={tire} className=\"icon\" alt=\"tire-icon\" />}\n                    {item === 'Check windshield wiper fluid' && <img src={windshield} className=\"icon\" alt=\"windshield-icon\" />}\n                    {item === 'Check brake fluid' && <img src={fluid} className=\"icon\" alt=\"brake-fluid-icon\" />}\n                    {item === 'Check coolant' && <img src={coolant} className=\"icon\" alt=\"coolant-icon\" />}\n                    {item === 'Engine oil' && <img src={engineoil} className=\"icon\" alt=\"engine-oil-icon\" />}\n                    <div className=\"flex-sub-container\">\n                        <p className=\"maintenance-task\">{item}</p>\n                        <p className=\"schedule-task\">Schedule this task</p>\n                    </div>\n                </div>\n                {!hidden && key === `${index}` && itemType === \"monthly\" && (\n                    <div className=\"add-to-maintenance\">\n                        <AddPendingMaintenance hidden={hidden} renderForm={renderForm} item={item} id={id} />\n                    </div>\n                )}\n            </div>\n        );\n    });\n\n    const threeMonthTasks = threeMonths.map((item, index) => {\n        return (\n            <div \n                className={!hidden && itemType === \"threeMonths\" && key === `${index}` ? \"maintenance-item-expanded\" : \"maintenance-item\"} \n                key={index} \n                data-index={index} \n                current-type=\"threeMonths\" \n                onClick={hidden ? renderForm : undefined}\n            >\n                <div className=\"flex-container\">\n                    {item === 'Automatic transmission fluid' && <img src={fluid} className=\"icon\" alt=\"fluid-icon\" />}\n                    {item === 'Battery and cables' && <img src={battery} className=\"icon\" alt=\"battery-icon\" />}\n                    {item === 'Check belts and hoses' && <img src={belt} className=\"icon\" alt=\"engine-belt-icon\" />}\n                    {item === 'Check power steering fluid' && <img src={fluid} className=\"icon\" alt=\"fluid-icon\" />}\n                    <div className=\"flex-sub-container\">\n                        <p className=\"maintenance-task\">{item}</p>\n                        <p className=\"schedule-task\">Schedule this task</p>\n                    </div>\n                </div>\n                {!hidden && key === `${index}` && itemType === \"threeMonths\" && (\n                    <div className=\"add-to-maintenance\">\n                        <AddPendingMaintenance hidden={hidden} renderForm={renderForm} item={item} id={id} />\n                    </div>\n                )}\n            </div>\n        );\n    });\n\n    const sixMonthTasks = sixMonths.map((item, index) => {\n        return (\n            <div \n                className={!hidden && itemType === \"sixMonths\" && key === `${index}` ? \"maintenance-item-expanded\" : \"maintenance-item\"} \n                key={index} \n                data-index={index} \n                current-type=\"sixMonths\" \n                onClick={hidden ? renderForm : undefined}\n            >\n                <div className=\"flex-container\">\n                    {item === 'Chassis lubrication' && <img src={lubrication} className=\"icon\" alt=\"chassis-lubrication-icon\" />}\n                    {item === 'Tire rotation' && <img src={tire} className=\"icon\" alt=\"car-tire-icon\" />}\n                    {item === 'Engine air filter' && <img src={filter} className=\"icon\" alt=\"engine-air-filter-icon\" />}\n                    {item === 'Check exhaust system' && <img src={exhaust} className=\"icon\" alt=\"exhaust-icon\" />}\n                    {item === 'Replace wiper blades' && <img src={windshield} className=\"icon\" alt=\"windshield-icon\" />}\n                    {item === 'Brakes inspection' && <img src={brakes} className=\"icon\" alt=\"brakes-icon\" />}\n                    <div className=\"flex-sub-container\">\n                        <p className=\"maintenance-task\">{item}</p>\n                        <p className=\"schedule-task\">Schedule this task</p>\n                    </div>\n                </div>\n                {!hidden && key === `${index}` && itemType === \"sixMonths\" && (\n                    <div className=\"add-to-maintenance\">\n                        <AddPendingMaintenance hidden={hidden} renderForm={renderForm} item={item} id={id} />\n                    </div>\n                )}\n            </div>\n        );\n    });\n\n    const yearlyTasks = yearlyItems.map((item, index) => {\n        return (\n            <div \n                className={!hidden && itemType === \"yearly\" && key === `${index}` ? \"maintenance-item-expanded\" : \"maintenance-item\"} \n                key={index} \n                data-index={index} \n                current-type=\"yearly\" \n                onClick={hidden ? renderForm : undefined}>\n                <div className=\"flex-container\">\n                    {item === 'Replace cabin air filter' && <img src={filter} className=\"icon\" alt=\"cabin-air-filter-icon\" />}\n                    {item === 'Check fuel filter' && <img src={fuelfilter} className=\"icon\" alt=\"fuel-filter-icon\" />}\n                    {item === 'Check steering and suspension' && <img src={steering} className=\"icon\" alt=\"steering-suspension-icon\" />}\n                    {item === 'Flush brake fluid' && <img src={brakefluid} className=\"icon\" alt=\"brake-fluid-icon\" />}\n                    {item === 'Check alignment' && <img src={alignment} className=\"icon\" alt=\"car-alignment-icon\" />}\n                    {item === 'Polish windshield and headlights' && <img src={polish} className=\"icon\" alt=\"headlight-icon\" />}\n                    <div className=\"flex-sub-container\">\n                        <p className=\"maintenance-task\">{item}</p>\n                        <p className=\"schedule-task\">Schedule this task</p>\n                    </div>\n                </div>\n                {!hidden && key === `${index}` && itemType === \"yearly\" && (\n                    <div className=\"add-to-maintenance\">\n                        <AddPendingMaintenance hidden={hidden} renderForm={renderForm} item={item} id={id} />\n                    </div>\n                )}\n            </div>\n        );\n    });\n\n            \n\n    return (\n        <Fragment>\n            <Navbar />\n            {!mediumView && (\n                <section className=\"maintenance-options\">\n                    <h2 className=\"maintenance-options-h2\">Monthly</h2>\n                    <div className=\"wrapper-1\">\n                        {monthlyTasks}\n                    </div>\n                    \n                    <h2 className=\"maintenance-options-h2\">Every 3 months/<br/>3,000 miles</h2>\n                    <div className=\"wrapper-2\">\n                        {threeMonthTasks}\n                        <div></div>\n                        <div></div>\n                    </div>\n\n                    <h2 className=\"maintenance-options-h2\">Every 6 months/<br/>6,000 miles</h2>\n                    <div className=\"wrapper-3\">\n                        {sixMonthTasks}\n                    </div>\n\n                    <h2 className=\"maintenance-options-h2\">Every 12 months/<br/>12,000 miles</h2>\n                    <div className=\"wrapper-4\">\n                        {yearlyTasks}\n                    </div>\n                </section>\n            )}\n            {mediumView && (\n                <section className=\"maintenance-options\">\n                    <h2 className={currentOption === 'monthly' ? \"h2-med h2-active\" : \"h2-med\" } onClick={() => setCurrentOption('monthly')}>Monthly</h2>\n                    {currentOption === 'monthly' && (\n                        <div className=\"wrapper-1\">\n                            {monthlyTasks}\n                        </div>\n                    )}\n                    \n                    <h2 className={currentOption === 'threeMonths' ? \"h2-med h2-active\" : \"h2-med\" } onClick={() => setCurrentOption('threeMonths')}>Every 3 months/<br/>3,000 miles</h2>\n                    {currentOption === 'threeMonths' && (\n                        <div className=\"wrapper-2\">\n                            {threeMonthTasks}\n                        </div>\n                    )}\n\n                    <h2 className={currentOption === 'sixMonths' ? \"h2-med h2-active\" : \"h2-med\" } onClick={() => setCurrentOption('sixMonths')}>Every 6 months/<br/>6,000 miles</h2>\n                    {currentOption === 'sixMonths' && (\n                        <div className=\"wrapper-3\">\n                            {sixMonthTasks}\n                        </div>\n                    )}\n\n                    <h2 className={currentOption === 'yearly' ? \"h2-med h2-active\" : \"h2-med\" } onClick={() => setCurrentOption('yearly')}>Every 12 months/<br/>12,000 miles</h2>\n                    {currentOption === 'yearly' && (\n                        <div className=\"wrapper-4\">\n                            {yearlyTasks}\n                        </div>\n                    )}\n                </section>  \n            )}\n        </Fragment>\n    )\n}\n\nconst mapStateToProps = state => {\n    if(state.auth.user != null) {\n        return ({\n            id: state.auth.user._id\n        });\n    } else {\n        return ({});\n    }\n}\n\nexport default connect(mapStateToProps)(MaintenanceOptions);","import React, { Fragment, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { addCompletedMaintenance, deletePendingMaintenanceForCompleted } from '../../actions/account';\n\nconst AddCompletedMaintenance = ({ addCompletedMaintenance, history, handleChild, renderForm, item, deletePendingMaintenanceForCompleted, setKey }) => {\n\n    let today = new Date();\n    const dd = String(today.getDate()).padStart(2, '0');\n    const mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0\n    const yyyy = today.getFullYear();\n    today = mm + '/' + dd + '/' + yyyy;\n\n    const [formData] = useState({\n        maintenanceType: item.maintenanceType,\n        date: today,\n        notes: item.notes\n    });\n\n    const id = item._id\n\n    return (\n        <Fragment>\n            <form className=\"maintenance-item-form\" onSubmit={e => {\n                e.preventDefault();\n                addCompletedMaintenance(formData, history);\n                deletePendingMaintenanceForCompleted(id);\n                renderForm(e);\n                setKey(null);\n                }}>\n                <label htmlFor=\"add-to-completed\" className=\"add-completed-label\">Add to Completed Maintenance?</label>\n                <input type=\"submit\" value=\"Yes\" className=\"submit-completed-button\" />\n                <input type=\"button\" value=\"Cancel\" className=\"cancel-button\" onClick={e => renderForm(e)} />\n            </form>\n        </Fragment>\n    )\n}\n\nconst mapStateToProps = state => {\n    return (\n        ({\n            completedMaintenanceItems: state.completedMaintenanceItems\n        })\n    )    \n}\n\nexport default connect(mapStateToProps, { addCompletedMaintenance, deletePendingMaintenanceForCompleted })(AddCompletedMaintenance);","import React, { Fragment, useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Navbar from '../layout/Navbar';\nimport { getPendingMaintenance, addCompletedMaintenance, deletePendingMaintenance } from '../../actions/account';\nimport { connect } from 'react-redux';\nimport AddCompletedMaintenance from '../forms/AddCompletedMaintenance';\n\nconst PendingMaintenance = ({ getPendingMaintenance, addCompletedMaintenance, auth, pendingMaintenanceItems, deletePendingMaintenance }) => {\n\n    useEffect(() => {\n        getPendingMaintenance();\n    })\n\n    const [hidden, setHidden] = useState(true);\n    const [key, setKey] = useState(null);\n    \n    function renderForm(e) {\n        e.preventDefault();\n        const key = e.currentTarget.parentNode.parentNode.parentNode.getAttribute(\"data-index\");\n        setKey(key);\n        setHidden(!hidden);\n    }\n\n    function deletePendingMaintenanceClick(e) {\n        const deleteKey = Number(e.currentTarget.parentNode.parentNode.parentNode.getAttribute(\"data-index\"));\n        pendingMaintenanceItems.forEach((item, index) => {\n            if (index === deleteKey) {\n                deletePendingMaintenance(item._id);\n            }\n        });\n    }\n\n    return (\n        <Fragment>\n            <Navbar />\n            <h1 className=\"pending-maintenance-h1\">Pending Maintenance Items</h1>\n            {/* {pendingMaintenanceItems !== undefined && pendingMaintenanceItems.length !== 0 &&<p className=\"pending-maintenance-sort\">Sort by:</p>} */}\n            <div className=\"container-pending-maintenance-items\">\n            {pendingMaintenanceItems !== undefined && pendingMaintenanceItems.length === 0 && (\n                <p className=\"no-maintenance-items\">\n                    No pending maintenance items added. Go to \n                    &nbsp;\n                    <Link \n                    className=\"maintenance-options-link\"\n                    to=\"/maintenanceoptions\"\n                    activestyle={{\n                    color: \"#008CC5\"\n                    }}\n                    >\n                    Maintenance Options\n                    </Link> \n                    &nbsp;\n                    to view a selection of pending maintenance items.\n                </p>\n            )}\n            {pendingMaintenanceItems !== undefined && pendingMaintenanceItems.map((item, index) => {\n                let date = item.date.slice(0, 10);\n                return (\n                    <div \n                        className={!hidden && key === `${index}` ? \"pending-maintenance-item-expanded\" : \"pending-maintenance-item\"}\n                        key={index}\n                        data-index={index}\n                    >\n                        <div className=\"pending-container\">\n                            <p className=\"pending-maintenance-task\">{item.maintenanceType}</p>\n                            <p className=\"maintenance-date\">Scheduled for {date}</p>\n                            {key !== `${index}` && <p className=\"maintenance-notes\">{item.notes}</p>}\n                            <div className=\"button-container\">\n                                {key !== `${index}` && <button className=\"pending-item-complete-button\" onClick={hidden ? renderForm : undefined}>Completed</button>}\n                                {key !== `${index}` && <button className=\"pending-item-delete-button\" onClick={deletePendingMaintenanceClick}>Delete</button>}\n                            </div>\n                            {!hidden && key === `${index}` && (\n                                <div className=\"add-to-maintenance\">\n                                    <AddCompletedMaintenance hidden={hidden} renderForm={renderForm} item={item} setKey={setKey} />\n                                </div>\n                            )}\n                        </div>\n                    </div>\n                )\n            })}\n            </div>\n        </Fragment>\n    )\n}\n\nconst mapStateToProps = state => {\n    if(state.account.user != null) {\n        return ({\n            pendingMaintenanceItems: state.account.user.pendingMaintenance\n        });\n    } else {\n        return ({});\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    { getPendingMaintenance, addCompletedMaintenance, deletePendingMaintenance }\n)(PendingMaintenance);","import React, { Fragment, useEffect } from 'react';\nimport { getCompletedMaintenance, deleteCompletedMaintenance } from '../../actions/account';\nimport Navbar from '../layout/Navbar';\nimport { connect } from 'react-redux';\nimport checkbox from './img/checkbox.svg';\n\nconst CompletedMaintenance = ({ getCompletedMaintenance, completedMaintenanceItems, deleteCompletedMaintenance }) => {\n\n    useEffect(() => {\n        getCompletedMaintenance();\n    })\n\n    function deleteCompletedMaintenanceClick(e) {\n        const deleteKey = Number(e.currentTarget.parentNode.parentNode.getAttribute(\"data-index\"));\n        completedMaintenanceItems.forEach((item, index) => {\n            if (index === deleteKey) {\n                deleteCompletedMaintenance(item._id);\n            }\n        });\n    }\n\n    return (\n        <Fragment>\n            <Navbar />\n            <h1 className=\"completed-maintenance-h1\">Completed Maintenance Items</h1>\n            <div className=\"container-completed-maintenance-items\">\n                {completedMaintenanceItems !== undefined && completedMaintenanceItems.length === 0 && (\n                    <p className=\"no-maintenance-items\">\n                        No completed maintenance items added yet.\n                    </p>\n                )}\n                {completedMaintenanceItems !== undefined && completedMaintenanceItems.map((item, index) => {\n                    let date = item.date.slice(0, 10);\n                    return (\n                        <div \n                            className=\"completed-maintenance-item\"\n                            key={index}\n                            data-index={index}\n                        >\n                            <div className=\"completed-container\">\n                                <p className=\"pending-maintenance-task\">{item.maintenanceType}</p>\n                                <div className=\"completed-maintenance-date-container\">\n                                    <img src={checkbox} className=\"checkbox\" alt=\"checkbox\" />\n                                    <p className=\"completed-maintenance-date\">Completed on {date}</p>\n                                </div>\n                                <button className=\"pending-item-delete-button\" onClick={deleteCompletedMaintenanceClick}>Delete</button>\n                            </div>\n                        </div>\n                    )\n                })}\n            </div>\n        </Fragment>\n    )\n}\n\nconst mapStateToProps = state => {\n    if(state.account.user != null) {\n        return ({\n            completedMaintenanceItems: state.account.user.completedMaintenance\n        });\n    } else {\n        return ({});\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    { getCompletedMaintenance, deleteCompletedMaintenance }\n)(CompletedMaintenance);","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nconst PrivateRoute = ({ component: Component, auth: { isAuthenticated, loading }, ...rest }) => (\n    <Route \n        {...rest} \n        render={props => \n            !isAuthenticated && !loading ? (\n                <Redirect to='/login' />\n            ) : (\n                <Component {...props} />\n            )\n        } \n    />\n);\n\nPrivateRoute.propTypes = {\n    auth: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n})\n\nexport default connect(mapStateToProps)(PrivateRoute);","import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\n\nconst initialState = [];\n\nexport default function(state = initialState, action) {\n    const { type, payload } = action;\n\n    switch(type) {\n        case SET_ALERT:\n            return [...state, payload];\n        case REMOVE_ALERT:\n            return state.filter(alert => alert.id !== payload);\n        default:\n            return state;\n    }\n}","import {\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    USER_LOADED,\n    AUTH_ERROR,\n    LOGIN_FAIL,\n    LOGOUT\n} from '../actions/types';\n\nconst initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    loading: true,\n    user: null\n}\n\nexport default function(state = initialState, action) {\n    const { type, payload } = action;\n\n    switch(type) {\n        case USER_LOADED:\n            return {\n                ...state,\n                isAuthenticated: true,\n                loading: false,\n                user: payload\n            }\n        case REGISTER_SUCCESS:\n            localStorage.setItem('token', payload.token);\n            return {\n                ...state,\n                ...payload,\n                isAuthenticated: true,\n                loading: false\n            }\n        case REGISTER_FAIL:\n        case AUTH_ERROR:\n        case LOGIN_FAIL:\n        case LOGOUT:\n            localStorage.removeItem('token');\n            return {\n                ...state,\n                token: null,\n                isAuthenticated: false,\n                loading: false\n            }\n        default:\n            return state;\n    }\n}","import {\n    GET_ACCOUNT,\n    UPDATE_ACCOUNT,\n    ACCOUNT_ERROR\n} from '../actions/types';\n\nconst initialState = {\n    user: null,\n    loading: true,\n    error: {}\n}\n\nexport default function(state = initialState, action) {\n    const { type, payload } = action;\n\n    switch(type) {\n        case GET_ACCOUNT:\n            case UPDATE_ACCOUNT:\n                return {\n                    ...state,\n                    user: payload,\n                    loading: false\n                };\n        case ACCOUNT_ERROR:\n            return {\n                ...state,\n                error: payload,\n                loading: false,\n                user: null\n            };\n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux';\nimport alert from './alert';\nimport auth from './auth';\nimport account from './account';\n\nexport default combineReducers({\n    alert,\n    auth,\n    account\n});","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n    rootReducer, \n    initialState, \n    composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;","import React, { Fragment, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Landing from './components/layout/Landing';\nimport Register from './components/auth/Register';\nimport Login from './components/auth/Login';\nimport LoginDemo from './components/auth/LoginDemo';\nimport Alert from './components/layout/Alert';\nimport MaintenanceOptions from './components/maintenance/MaintenanceOptions';\nimport PendingMaintenance from './components/maintenance/PendingMaintenance';\nimport CompletedMaintenance from './components/maintenance/CompletedMaintenance';\nimport PrivateRoute from './components/routing/PrivateRoute';\n\n// Redux\n// Provider combines React and Redux\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport { loadUser } from './actions/auth';\nimport setAuthToken from './utils/setAuthToken';\n\nimport './App.css';\n\nif(localStorage.token) {\n  setAuthToken(localStorage.token);\n}\n\nconst App = () => {\n  useEffect(() => {\n    store.dispatch(loadUser());\n    // When the state updates, useEffect will keep running unless we add a second parameter with empty brackets\n  }, []);\n\n  return (\n    <Provider store={store}>\n    <Router>\n      <Fragment>\n        <Route exact path=\"/\" component={Landing} />\n        <section className=\"container\">\n          <Alert />\n          <Switch>\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/login-demo\" component={LoginDemo} />\n            <PrivateRoute exact path=\"/maintenanceoptions\" component={MaintenanceOptions} />\n            <PrivateRoute exact path=\"/account/pendingmaintenance\" component={PendingMaintenance} />\n            <PrivateRoute exact path=\"/account/completedmaintenance\" component={CompletedMaintenance} />\n          </Switch>\n        </section>\n      </Fragment>\n    </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}